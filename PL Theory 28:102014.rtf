{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Polymorphism - \'93Many Shaped\'94\
-	Elements can take on different types\
-	Generally functions that can be applied to different kind of arguements of different types\
\
Parametric polymorphism:  by having universally quanitified type variables\
\
No terminating function which can have alpha to alpha\
fun id x = x;\
Non terminating function\
fun silly x = if false then x else silly x\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \CocoaLigature0 - fun map f [] = []\
= | map f (x::xs) = f x :: map f xs ;\
val map = fn : ('a -> 'b) -> 'a list -> 'b list\
\

\f0\fs24 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
}